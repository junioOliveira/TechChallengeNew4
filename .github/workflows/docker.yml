name: Docker Build and Push

on:
  push:
    branches:
      - main  # Roda sempre que houver push na branch main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Restaurar pacotes NuGet
        run: dotnet restore src/TechChallenge.Api/TechChallenge.Api.csproj

      - name: Build do projeto
        run: dotnet build src/TechChallenge.Api/TechChallenge.Api.csproj --configuration Release --no-restore

      - name: Executar testes
        run: dotnet test src/TechChallenge.Api.Tests/TechChallenge.Api.Tests.csproj --configuration Release --no-build --verbosity normal

      - name: Publicar aplicação
        run: dotnet publish src/TechChallenge.Api/TechChallenge.Api.csproj -c Release -o out

      - name: Login no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_HUB_USERNAME }}
          password: ${{ vars.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Docker image
        run: docker build -t techchallenge4:latest -f Docker/Dockerfile.Api .

      - name: Run Docker container
        run: docker run -d -p 8080:80 techchallenge4:latest

      - name: Check running containers
        run: docker ps

      - name: Check container logs
        run: docker logs $(docker ps -q --filter ancestor=techchallenge4:latest)